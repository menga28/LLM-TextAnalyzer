services:

  fluentd:
    container_name: llm-fluentd
    build: ./fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/etc:/fluentd/etc
      - ./fluentd/log:/fluentd/log
      - ./datasets:/datasets
      - ./fluentd/scripts:/fluentd/scripts 
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    env_file: 
      - .env
    depends_on:
      couchdb:
        condition: service_healthy
    command: ["/bin/bash", "-c", "nohup /fluentd/scripts/filemonitoring_fluentd.sh & fluentd -c /fluentd/etc/fluent.conf -vv"]
    networks:
      - backend
    restart: on-failure

  couchdb:
    container_name: llm-couchdb
    build: ./couchdb
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_CLUSTER_Q=1
      - COUCHDB_CLUSTER_N=1
    volumes:
      - couchdb-data:/opt/couchdb/data
    networks:
      - backend
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
      interval: 10s
      retries: 5

  spark:
    container_name: llm-spark
    build: ./spark
    ports:
      - "8080:8080"
      - "4040:4040"
    volumes:
      - ./spark:/spark
    depends_on:
      couchdb:
        condition: service_healthy
    env_file: 
      - .env
    networks:
      - backend
    restart: on-failure

  python-app:
    container_name: llm-python
    build:
      context: ./app  
      dockerfile: Dockerfile
    volumes:
      - ./app:/app  
      - ./datasets:/datasets
      #- ./onprem/onprem:/app/onprem
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '4'  
        reservations:
          cpus: '2' 
    restart: always

volumes:
  couchdb-data:
    driver: local

networks:
  backend:
    driver: bridge
